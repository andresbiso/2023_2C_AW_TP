{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Blog",
    "description": "Ejemplo de API para manejo de un Blog.",
    "contact": {}
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Users actions"
    },
    {
      "name": "Blogs",
      "description": "Blogs actions"
    },
    {
      "name": "Articles",
      "description": "Articles actions"
    },
    {
      "name": "Comments",
      "description": "Comments actions"
    },
    {
      "name": "General",
      "description": "Other common requests"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/": {
      "options": {
        "tags": ["General"],
        "description": "List Options",
        "produces": ["application/json"],
        "responses": {
          "204": {
            "schema": {
              "$ref": "#/definitions/no_content"
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": ["Users"],
        "description": "List users",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "schema": {
              "$ref": "#/definitions/username"
            },
            "example": "test_user_1"
          },
          {
            "name": "password",
            "in": "query",
            "schema": {
              "$ref": "#/definitions/password"
            },
            "example": "test_pass_1"
          },
          {
            "name": "first_name",
            "in": "query",
            "schema": {
              "$ref": "#/definitions/first_name"
            },
            "example": "test_first_name_1"
          },
          {
            "name": "last_name",
            "in": "query",
            "schema": {
              "$ref": "#/definitions/last_name"
            },
            "example": "test_last_name_1"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "$ref": "#/definitions/page"
            },
            "example": "1"
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "$ref": "#/definitions/limit"
            },
            "example": "10"
          },
          {
            "name": "sort",
            "in": "query",
            "schema": {
              "$ref": "#/definitions/sort"
            },
            "example": "asc"
          },
          {
            "name": "sort_by",
            "in": "query",
            "schema": {
              "$ref": "#/definitions/sort_by"
            },
            "example": "first_name"
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/bad_request"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/not_found"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/server_error"
            }
          }
        }
      },
      "post": {
        "tags": ["Users"],
        "description": "Create user",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "user_model",
            "required": [
              "user_id",
              "username",
              "password",
              "first_name",
              "last_name"
            ],
            "in": "body",
            "properties": {
              "user_id": {
                "$ref": "#/definitions/user_id"
              },
              "username": {
                "$ref": "#/definitions/username"
              },
              "password": {
                "$ref": "#/definitions/password"
              },
              "first_name": {
                "$ref": "#/definitions/first_name"
              },
              "last_name": {
                "$ref": "#/definitions/last_name"
              }
            },
            "example": {
              "user_id": 1,
              "username": "test_user_1",
              "password": "test_pass_1",
              "first_name": "test_first_name_1",
              "last_name": "test_last_name_1"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/bad_request"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/server_error"
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": ["Users"],
        "description": "Get user by id",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "user_id",
            "required": "true",
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "nullable": false,
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/not_found"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/server_error"
            }
          }
        }
      },
      "put": {
        "tags": ["Users"],
        "description": "Update user",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "user_id",
            "required": "true",
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "nullable": false,
            "example": 1
          },
          {
            "name": "user_model",
            "required": ["username", "password", "first_name", "last_name"],
            "in": "body",
            "properties": {
              "username": {
                "$ref": "#/definitions/username"
              },
              "password": {
                "$ref": "#/definitions/password"
              },
              "first_name": {
                "$ref": "#/definitions/first_name"
              },
              "last_name": {
                "$ref": "#/definitions/last_name"
              }
            },
            "example": {
              "username": "test_user_1b",
              "password": "test_pass_1b",
              "first_name": "test_first_name_1b",
              "last_name": "test_last_name_1b"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/bad_request"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/not_found"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/server_error"
            }
          }
        }
      },
      "patch": {
        "tags": ["Users"],
        "description": "Update user",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "user_id",
            "required": "true",
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "nullable": false,
            "example": 1
          },
          {
            "name": "user_model",
            "required": [],
            "in": "body",
            "properties": {
              "username": {
                "$ref": "#/definitions/username"
              },
              "password": {
                "$ref": "#/definitions/password"
              },
              "first_name": {
                "$ref": "#/definitions/first_name"
              },
              "last_name": {
                "$ref": "#/definitions/last_name"
              }
            },
            "example": {
              "first_name": "test_first_name_1c"
            }
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "400": {
            "schema": {
              "$ref": "#/definitions/bad_request"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/not_found"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/server_error"
            }
          }
        }
      },
      "delete": {
        "tags": ["Users"],
        "description": "Delete user",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "user_id",
            "required": "true",
            "type": "integer",
            "format": "int32",
            "minimum": 1,
            "nullable": false,
            "example": 1
          }
        ],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/success"
            }
          },
          "404": {
            "schema": {
              "$ref": "#/definitions/not_found"
            }
          },
          "500": {
            "schema": {
              "$ref": "#/definitions/server_error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "user_id": {
      "type": "integer",
      "description": "Id for User"
    },
    "blog_id": {
      "type": "integer",
      "description": "Id for Blog"
    },
    "article_id": {
      "type": "integer",
      "description": "Id for Article"
    },
    "comment_id": {
      "type": "integer",
      "description": "Id for Comment"
    },
    "username": {
      "type": "string",
      "description": "Username for login"
    },
    "password": {
      "type": "string",
      "description": "User password for login"
    },
    "first_name": {
      "type": "string",
      "description": "User first name"
    },
    "last_name": {
      "type": "string",
      "description": "User last name"
    },
    "title": {
      "type": "string",
      "description": "Add a title"
    },
    "description": {
      "type": "string",
      "description": "Add a description"
    },
    "content": {
      "type": "string",
      "description": "Add some content"
    },
    "page": {
      "type": "integer",
      "description": "Current Page",
      "example": "1"
    },
    "limit": {
      "type": "integer",
      "description": "Number of elements",
      "example": "10"
    },
    "sort": {
      "type": "string",
      "description": "asc | desc",
      "example": "asc"
    },
    "sort_by": {
      "type": "string",
      "description": "Resource field",
      "example": "first_name"
    },
    "server_error": {
      "type": "object",
      "description": "500 Server Error",
      "properties": {
        "message": {
          "type": "string",
          "description": "500 Server Error",
          "example": "500 Server Error"
        }
      }
    },
    "bad_request": {
      "type": "object",
      "description": "400 Bad Request",
      "properties": {
        "message": {
          "type": "string",
          "description": "400 Bad Request",
          "example": "400 Bad Request"
        }
      }
    },
    "not_found": {
      "type": "object",
      "description": "404 Not Found",
      "properties": {
        "msg": {
          "type": "string",
          "description": "404 Not Found",
          "example": "404 Not Found"
        }
      }
    },
    "success": {
      "type": "object",
      "description": "200 OK",
      "properties": {
        "message": {
          "type": "string",
          "description": "200 OK",
          "example": "200 OK"
        }
      }
    },
    "no_content": {
      "type": "object",
      "description": "204 No Content",
      "properties": {
        "message": {
          "type": "string",
          "description": "204 No Content",
          "example": "204 No Content"
        }
      }
    }
  }
}
